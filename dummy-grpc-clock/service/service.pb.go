// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TimeResponse struct {
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TimeResponse) Reset()         { *m = TimeResponse{} }
func (m *TimeResponse) String() string { return proto.CompactTextString(m) }
func (*TimeResponse) ProtoMessage()    {}
func (*TimeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *TimeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeResponse.Unmarshal(m, b)
}
func (m *TimeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeResponse.Marshal(b, m, deterministic)
}
func (m *TimeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeResponse.Merge(m, src)
}
func (m *TimeResponse) XXX_Size() int {
	return xxx_messageInfo_TimeResponse.Size(m)
}
func (m *TimeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TimeResponse proto.InternalMessageInfo

func (m *TimeResponse) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func init() {
	proto.RegisterType((*TimeResponse)(nil), "service.TimeResponse")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 167 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0xa5, 0xe4, 0xd3,
	0xf3, 0xf3, 0xd3, 0x73, 0x52, 0xf5, 0xc1, 0xc2, 0x49, 0xa5, 0x69, 0xfa, 0x25, 0x99, 0xb9, 0xa9,
	0xc5, 0x25, 0x89, 0xb9, 0x05, 0x10, 0x95, 0x52, 0xd2, 0xe8, 0x0a, 0x52, 0x73, 0x0b, 0x4a, 0x2a,
	0x21, 0x92, 0x4a, 0x1e, 0x5c, 0x3c, 0x21, 0x99, 0xb9, 0xa9, 0x41, 0xa9, 0xc5, 0x05, 0xf9, 0x79,
	0xc5, 0xa9, 0x42, 0x16, 0x5c, 0x9c, 0x70, 0xfd, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xdc, 0x46, 0x52,
	0x7a, 0x10, 0x03, 0xf4, 0x60, 0x06, 0xe8, 0x85, 0xc0, 0x54, 0x04, 0x21, 0x14, 0x1b, 0x79, 0x72,
	0x71, 0x07, 0xe7, 0xe7, 0xa6, 0x06, 0x43, 0x9c, 0x25, 0x64, 0xc5, 0xc5, 0x5e, 0x90, 0x5a, 0x94,
	0x96, 0x5f, 0x94, 0x2b, 0x24, 0x86, 0x61, 0x80, 0x2b, 0xc8, 0x05, 0x52, 0xa2, 0x7a, 0x30, 0x2f,
	0x21, 0x3b, 0x41, 0x89, 0x21, 0x89, 0x0d, 0xac, 0xd0, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x4f,
	0x52, 0x00, 0x96, 0xf3, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SomeServiceClient is the client API for SomeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SomeServiceClient interface {
	Perform(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*TimeResponse, error)
}

type someServiceClient struct {
	cc *grpc.ClientConn
}

func NewSomeServiceClient(cc *grpc.ClientConn) SomeServiceClient {
	return &someServiceClient{cc}
}

func (c *someServiceClient) Perform(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*TimeResponse, error) {
	out := new(TimeResponse)
	err := c.cc.Invoke(ctx, "/service.SomeService/perform", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SomeServiceServer is the server API for SomeService service.
type SomeServiceServer interface {
	Perform(context.Context, *empty.Empty) (*TimeResponse, error)
}

// UnimplementedSomeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSomeServiceServer struct {
}

func (*UnimplementedSomeServiceServer) Perform(ctx context.Context, req *empty.Empty) (*TimeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Perform not implemented")
}

func RegisterSomeServiceServer(s *grpc.Server, srv SomeServiceServer) {
	s.RegisterService(&_SomeService_serviceDesc, srv)
}

func _SomeService_Perform_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SomeServiceServer).Perform(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.SomeService/Perform",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SomeServiceServer).Perform(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _SomeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.SomeService",
	HandlerType: (*SomeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "perform",
			Handler:    _SomeService_Perform_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
